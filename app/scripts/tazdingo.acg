{"html":"<selectorrect target=\"targetElement\" rectangleflag=\"rectangleflag\"></selectorrect>\n<desktopbox ng-repeat=\"item in folderItems\" bootstrapped=\"usebootstrap\" model=\"item\" clickable draggable></desktopbox>\n<contextmenu ng-if=\"contextVisible\" targets=\"selectedObjects\" pos=\"contextpos\"></contextmenu>","css":".systemdir{\n  color:red;\n}","js":"(function(){ //return object inside an anonymous function\n  return {\n    title:\"System.Dir\",\n    fa:\"fa-folder\",\n    //img:\"link\", //Use img for image or fa for icon from fontawesome.\n    bind:{\n        contextmenu: [{\n          \textension: \".dir\",\n            title:\"Open\",\n            action: function(extensionid, args){\n                CBapi.createWindow(extensionid, args);\n            },\n            fa:\"fa-folder\"\n        },{\n          \textension: \".dir\",\n            title:\"Rename\",\n            action: function(extensionid, args){\n                alert(args);\n            },\n            fa:\"fa-pencil\"\n        }],\n      \tclick:[{\n        \textension: \".dir\",\n          \taction: function(extensionid, args){\n                CBapi.createWindow(extensionid, args);\n            }\n        }]\n    },\n    sidebar:true, //show on sidebar\n    window:{ //Default\n      \ttitle:\"File Explorer\", //scope.window.title\n      \tfa:\"fa-folder\",\n      \timg:null,\n    },\n    controller: function(scope, element, attrs, $injector){ //use controller if you have window.\n      \t//You will recieve 4 objects as arguments\n      \t//Scope will be your scope, js...\n\t\t//Element will be the target dom element\n\t\t//Attr will be your attributes if defined\n\t\t//$Injector will help you to inject modules in to your controller\n\t\tscope.folderItems = $injector.get(\"StorageLibrary\").getDesktopItems();\n\t\tscope.contextVisible = false;\n      \tscope.contextmenu = function (e) {\n            scope.selectedObjects = scope.folderItems.filter(function (obj) {\n                return obj.selected;\n            });\n            scope.contextpos = {\n              \tleft:  e.pageX - $(element).parent().offset().left,\n              \ttop: e.pageY - ($(element).parent().offset().top + 25),\n            }\n            scope.contextVisible = true;\n            e.stopPropagation();\n          \te.preventDefault();\n        }\n\t\t\n      \tscope.targetElement = element;\n\t\tscope.usebootstrap = true;\n      \tscope.rectangleflag = false;\n      \n      \tscope.$on('clickonbox', function (event, target) {\n            scope.contextVisible = false;\n        });\n      \n      \telement.bind(\"contextmenu\", scope.contextmenu);\n\t\telement.bind(\"click\", function(){\n\t\t\tif (scope.rectangleflag) {\n                scope.rectangleflag = false;\n            } else {\n                scope.$broadcast('unselect');\n                scope.contextVisible = false;\n            }\n\t\t});\n      \t\n\t\tif(scope.args instanceof Array){\n          scope.window.title = \"File Explorer \" + scope.args[0].title;\n        }else{\n          scope.window.title = \"File Explorer \" + scope.args.title; \n        }\t\n    }\n  };\n})();","name":"tazdingo","category":"Misc","_id":"gmjzwjwg"}